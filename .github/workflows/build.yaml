name: Build and Test

on:
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - run: |
        git fetch --prune --unshallow
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r Task-3/src/requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        export PYTHONPATH=src
        pytest
    - name: Build Docker image
      run: |
        docker build -t my-app:latest -f Task-3/src/python-dockerfile .

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: true
        registry-type: private
        skip-logout: false
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
    
    - name: Build and Push Docker image to ECR
      run: |
        docker tag ${{ secrets.AWS_REGISTRY_URL }}/my-app:latest ${{ secrets.AWS_REGISTRY_URL }}/${{ github.repository }}:${{ github.sha }}

        # Push both tags to ECR
        docker push ${{ secrets.AWS_REGISTRY_URL }}/${{ github.repository }}:latest
        docker push ${{ secrets.AWS_REGISTRY_URL }}/${{ github.repository }}:${{ github.sha }}